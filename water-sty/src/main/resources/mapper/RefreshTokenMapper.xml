<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mapper是根标签。namespace属性是找到当前配置的依据 -->
<!-- 由于最理想的Mybatis使用方式是：通过Mapper接口调用接口方法，访问数据库 -->
<!-- 这样的理想方式要求：能够通过接口全类名找到Mapper配置 -->
<!-- 所以：我们就用Mapper接口的全类名来给namespace属性赋值 -->
<mapper namespace="com.example.dao.mapper.RefreshTokenMapper">
    <sql id="colRefreshToken">
        `id`,
        `user_id`,
`refresh_token`,
`create_date`,
`update_date`
    </sql>
    <insert id="addRefreshToken">
        insert into refresh_token (user_id,refresh_token)
        values (#{userId},#{refreshToken});
    </insert>


    <delete id="deleteRefreshTokenByUserId">
        DELETE
        FROM refresh_token
        WHERE user_id = #{userId};
    </delete>
    <select id="getRefreshTokenByRefreshToken" resultType="com.example.dao.model.entity.RefreshToken">
        select <include refid="colRefreshToken"></include>
        from refresh_token
        where refresh_token = #{refreshToken};
    </select>

</mapper>
