<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.mapper.CollectionMapper">
    <resultMap id="BaseResultMap" type="com.example.dao.model.entity.Collection">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="video_id" jdbcType="BIGINT" property="videoId"/>
        <result column="group_id" jdbcType="INTEGER" property="groupId"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id
        , user_id, video_id, group_id, create_date, update_date
    </sql>
    <select id="selectByExample" parameterType="com.example.dao.model.entity.CollectionExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from collection
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from collection
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from collection
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.example.dao.model.entity.CollectionExample">
        delete from collection
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.example.dao.model.entity.Collection">
        insert into collection (id, user_id, video_id,
                                group_id, create_date, update_date)
        values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{videoId,jdbcType=BIGINT},
                #{groupId,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.example.dao.model.entity.Collection">
        insert into collection
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="videoId != null">
                video_id,
            </if>
            <if test="groupId != null">
                group_id,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="videoId != null">
                #{videoId,jdbcType=BIGINT},
            </if>
            <if test="groupId != null">
                #{groupId,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <insert id="addCollectionToGroup">
        INSERT INTO `collection` (`user_id`,`video_id`,`group_id`)
        VALUES ( #{userId} , #{videoId} , #{groupId} );
    </insert>
    <select id="countByExample" parameterType="com.example.dao.model.entity.CollectionExample"
            resultType="java.lang.Long">
        select count(*) from collection
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="getGroupsByUserIdAndUpId" resultType="java.lang.Long">
        select group_id
        from `collection`
        where user_id = #{userId}
          and video_id = #{videoId}
    </select>
    <select id="hasCollection" resultType="com.example.dao.model.entity.Collection">
        select
        <include refid="Base_Column_List"></include>
        from `collection`
        where user_id = #{userId}
        and video_id = #{videoId}
    </select>
    <select id="selectVideoIdByUserIdAndGroupId" resultType="java.lang.Long">
        select video_id from `collection` where user_id = #{userId}
                                            and group_id = #{groupId}
    </select>
    <update id="updateGroupIdByGroupId">
        update `collection` set group_id = 0 where group_id=#{id} and user_id=#{userId}
    </update>
    <update id="updateByExampleSelective" parameterType="map">
        update collection
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=BIGINT},
            </if>
            <if test="record.videoId != null">
                video_id = #{record.videoId,jdbcType=BIGINT},
            </if>
            <if test="record.groupId != null">
                group_id = #{record.groupId,jdbcType=INTEGER},
            </if>
            <if test="record.createDate != null">
                create_date = #{record.createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateDate != null">
                update_date = #{record.updateDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update collection
        set id = #{record.id,jdbcType=BIGINT},
        user_id = #{record.userId,jdbcType=BIGINT},
        video_id = #{record.videoId,jdbcType=BIGINT},
        group_id = #{record.groupId,jdbcType=INTEGER},
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
        update_date = #{record.updateDate,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.dao.model.entity.Collection">
        update collection
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="videoId != null">
                video_id = #{videoId,jdbcType=BIGINT},
            </if>
            <if test="groupId != null">
                group_id = #{groupId,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.dao.model.entity.Collection">
        update collection
        set user_id     = #{userId,jdbcType=BIGINT},
            video_id    = #{videoId,jdbcType=BIGINT},
            group_id    = #{groupId,jdbcType=INTEGER},
            create_date = #{createDate,jdbcType=TIMESTAMP},
            update_date = #{updateDate,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="deleteGroupsByUserIdUpIdAndGroupId">
        delete
        from `collection`
        where user_id = #{userId}
          and video_id = #{videoId}
          and group_id = #{groupId}
          and group_id!='0'
    </delete>

    <delete id="deleteCollection">
        delete from `collection` where user_id = #{userId}
                                   and video_id = #{videoId}
    </delete>
</mapper>
