<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.mapper.FollowingMapper">
  <resultMap id="BaseResultMap" type="com.example.dao.model.entity.Following">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="up_id" jdbcType="BIGINT" property="upId" />
    <result column="group_id" jdbcType="BIGINT" property="groupId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, up_id, group_id, create_date, update_date
  </sql>
  <select id="selectByExample" parameterType="com.example.dao.model.entity.FollowingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from following
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from following
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from following
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.dao.model.entity.FollowingExample">
    delete from following
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.dao.model.entity.Following">
    insert into following (id, user_id, up_id,
      group_id, create_date, update_date
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{upId,jdbcType=BIGINT},
      #{groupId,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.dao.model.entity.Following">
    insert into following
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="upId != null">
        up_id,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="upId != null">
        #{upId,jdbcType=BIGINT},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=BIGINT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <insert id="addFollowingToGroup" parameterType="com.example.dao.model.entity.Following">
    insert into following(user_id,up_id,group_id) values (#{userId},#{upId},#{groupId})
  </insert>

  <select id="getGroupsByUserIdAndUpId" resultType="java.lang.Long">
    select group_id from following where user_id=#{userId} and up_id=#{upId}
  </select>
  <delete id="deleteGroupsByUserIdUpIdAndGroupId" >
    DELETE FROM following WHERE user_id=#{userId}
                            and up_id=#{upId}
                            and group_id=#{groupId}
                            and group_id!=0;
  </delete>

  <select id="countByExample" parameterType="com.example.dao.model.entity.FollowingExample" resultType="java.lang.Long">
    select count(*) from following
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectByUserId" resultType="com.example.dao.model.entity.Following">
    select
    <include refid="Base_Column_List"></include>
    from following
    where user_id = #{userId}
  </select>
  <select id="selectUpIdByUserIdAndGroupId" resultType="java.lang.Long">
    select up_id from following where user_id = #{userId} and group_id = #{groupId}
  </select>
  <select id="selectFansByUserId" resultType="java.lang.Long">
    select user_id from following where up_id = #{userId}
  </select>

  <select id="hasFollowing" resultType="com.example.dao.model.entity.Following">
      select
      <include refid="Base_Column_List"></include>
      from following where
      up_id = #{upId} and user_id = #{userId}
  </select>

  <select id="selectUpIds" resultType="java.lang.Long">
    select up_id from following where user_id = #{userId}
  </select>

  <delete id="deleteFollowing">
      DELETE
      FROM following
      WHERE user_id = #{userId}
        and up_id = #{upId};
  </delete>

  <update id="updateByExampleSelective" parameterType="map">
    update following
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.upId != null">
        up_id = #{record.upId,jdbcType=BIGINT},
      </if>
      <if test="record.groupId != null">
        group_id = #{record.groupId,jdbcType=BIGINT},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateGroupIdByGroupId">
    update `following` set group_id = 0 where group_id=#{id} and user_id=#{userId}
  </update>
  <update id="updateByExample" parameterType="map">
    update following
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      up_id = #{record.upId,jdbcType=BIGINT},
      group_id = #{record.groupId,jdbcType=BIGINT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.dao.model.entity.Following">
    update following
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="upId != null">
        up_id = #{upId,jdbcType=BIGINT},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=BIGINT},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.dao.model.entity.Following">
    update following
    set user_id = #{userId,jdbcType=BIGINT},
      up_id = #{upId,jdbcType=BIGINT},
      group_id = #{groupId,jdbcType=BIGINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
